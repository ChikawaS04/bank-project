@model BankApp.Helpers.PaginatedList<BankApp.Models.Transaction>
@using BankApp.Models

@{
    ViewData["Title"] = "Account Details";
    var account = (Account)ViewData["Account"];
}

<div class="container mt-4">
    <h2 class="mb-4">Account Details</h2>

    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <dl class="row">
                <dt class="col-sm-3">Account Number</dt>
                <dd class="col-sm-9">@account.AccountNumber</dd>

                <dt class="col-sm-3">Account Type</dt>
                <dd class="col-sm-9">@account.AccountType</dd>

                <dt class="col-sm-3">Balance</dt>
                <dd class="col-sm-9">@account.Balance.ToString("C")</dd>

                <dt class="col-sm-3">Status</dt>
                <dd class="col-sm-9">@account.Status</dd>

                <dt class="col-sm-3">Opened On</dt>
                <dd class="col-sm-9">@account.OpenDate.ToShortDateString()</dd>

                <dt class="col-sm-3">Client</dt>
                <dd class="col-sm-9">@($"{account.Client.ClientFirstName} {account.Client.ClientLastName}")</dd>
            </dl>

            <div class="d-flex gap-2 mt-3">
                @if (account.Status != BankApp.Enums.AccountStatus.Closed)
                {
                    <a asp-action="Edit" asp-route-id="@account.AccountId" class="btn btn-warning">Edit</a>
                }
                else
                {
                    <button class="btn btn-secondary" disabled>Edit</button>
                }
                <a asp-action="Index" class="btn btn-secondary ml-2">Back to List</a>
            </div>
        </div>
    </div>

    <div class="d-flex justify-content-between align-items-center mb-3">
        <h4 class="mb-0">Transactions</h4>
        <a asp-controller="Transactions" asp-action="Create" asp-route-accountId="@account.AccountId" class="btn btn-primary">
            + Add Transaction
        </a>
    </div>

    <form asp-action="Details" method="get" class="form-inline mb-3">
        <input type="hidden" name="id" value="@account.AccountId" />
        <label for="pageSizeID" class="mr-2">Page Size:</label>
        @Html.DropDownList("pageSizeID", ViewData["pageSizeID"] as SelectList, new { @class = "form-select form-select-sm", style = "width: 80px;", onchange = "this.form.submit();" })
    </form>

    @if (Model.Any())
    {
        <table class="table table-striped table-bordered">
            <thead class="thead-light">
                <tr>
                    <th>Transaction #</th>
                    <th>Date</th>
                    <th>Type</th>
                    <th>Amount</th>
                    <th>Description</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var t in Model)
                {
                    <tr>
                        <td>@t.TransactionNumber</td>
                        <td>@t.Timestamp.ToString("yyyy-MM-dd HH:mm")</td>
                        <td>@t.TransactionType</td>
                        <td>@t.Amount.ToString("C")</td>
                        <td>@t.Description</td>
                        <td>
                            <a asp-controller="Accounts" asp-action="Details" asp-route-id="@account.AccountId" class="btn btn-sm btn-outline-info">View</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="mb-5">
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                    <a class="page-link" asp-action="Details" asp-route-id="@account.AccountId" asp-route-page="@(Model.PageIndex - 1)" asp-route-pageSizeID="@ViewData["pageSizeID"]">Previous</a>
                </li>
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                        <a class="page-link" asp-action="Details" asp-route-id="@account.AccountId" asp-route-page="@i" asp-route-pageSizeID="@ViewData["pageSizeID"]">@i</a>
                    </li>
                }
                <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                    <a class="page-link" asp-action="Details" asp-route-id="@account.AccountId" asp-route-page="@(Model.PageIndex + 1)" asp-route-pageSizeID="@ViewData["pageSizeID"]">Next</a>
                </li>
                </ul>
            </nav>
        </div>
    }
    else
    {
        <p><em>No transactions found for this account.</em></p>
    }
</div>
