@model BankApp.Models.Account

@{
    ViewData["Title"] = "Create Account";
}

<div class="container mt-4">
    <h2 class="mb-4">Create New Account</h2>

    <div class="card shadow-sm">
        <div class="card-body">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group">
                    <label asp-for="AccountNumber" class="control-label"></label>
                    <input asp-for="AccountNumber" class="form-control" readonly />
                    <span asp-validation-for="AccountNumber" class="text-danger"></span>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AccountType, new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.AccountType,
                             (IEnumerable<SelectListItem>)ViewData["AccountType"],
                             "-- Select Account Type --",
                             new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AccountType, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label asp-for="Balance" class="control-label"></label>
                    <input asp-for="Balance" class="form-control" />
                    <span asp-validation-for="Balance" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="OpenDate" class="control-label"></label>
                    <input asp-for="OpenDate" class="form-control" />
                    <span asp-validation-for="OpenDate" class="text-danger"></span>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Status, new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.Status,
                             (IEnumerable<SelectListItem>)ViewData["Status"],
                             "-- Select Status --",
                             new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ClientId, new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.ClientId,
                             (IEnumerable<SelectListItem>)ViewData["ClientId"],
                             "-- Select Client --",
                             new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
                </div>

                <div class="form-group mt-4 d-flex justify-content-between">
                    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>

                @if (!ViewData.ModelState.IsValid)
                {
                    foreach (var modelError in ViewData.ModelState)
                    {
                        foreach (var error in modelError.Value.Errors)
                        {
                            <div class="text-danger mt-2">@($"{modelError.Key}: {error.ErrorMessage}")</div>
                        }
                    }
                }
            </form>
        </div>
    </div>
</div>

<div class="mb-5"></div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
