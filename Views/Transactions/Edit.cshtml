@model BankApp.Models.Transaction

@{
    ViewData["Title"] = "Edit Transaction";
}

<div class="container mt-4">
    <h2 class="mb-4">Edit Transaction</h2>

    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-body">
                    <form asp-action="Edit">
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                        <input type="hidden" asp-for="TransactionId" />

                        <div class="form-group">
                            <label asp-for="TransactionNumber" class="control-label"></label>
                            <input asp-for="TransactionNumber" class="form-control" readonly />
                            <span asp-validation-for="TransactionNumber" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="Timestamp" class="control-label"></label>
                            <input asp-for="Timestamp" class="form-control" />
                            <span asp-validation-for="Timestamp" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="Amount" class="control-label"></label>
                            <input asp-for="Amount" class="form-control" readonly />
                            <span asp-validation-for="Amount" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TransactionType, new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.TransactionType,
                                     (IEnumerable<SelectListItem>)ViewData["TransactionType"],
                                     "-- Select Type --",
                                     new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TransactionType, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label asp-for="Description" class="control-label"></label>
                            <input asp-for="Description" class="form-control" />
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.AccountId, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.AccountId,
                                     (SelectList)ViewData["AccountId"],
                                     "-- Select Account --",
                                     new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mt-4">
                            <button type="submit" class="btn btn-primary">Save Changes</button>
                            <a asp-action="Index" class="btn btn-secondary ms-2">Back to List</a>
                        </div>

                        @if (!ViewData.ModelState.IsValid)
                        {
                            <div class="alert alert-warning mt-3">
                                Form is invalid. Please check required fields.
                            </div>
                        }
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="mb-5"></div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
